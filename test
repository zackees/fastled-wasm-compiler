#!/bin/bash

set -e

# if virtual environment not present, install it
if [[ ! -d ".venv" ]] || [[ ! -f ".venv/pyvenv.cfg" ]]; then
    echo "Virtual environment not found, installing it"
    bash install
fi

# Parse command line arguments
RUN_UNIT_ONLY=false
RUN_INTEGRATION_ONLY=false
RUN_FULL=false
NO_TEST_FULL_BUILD=false

while [[ $# -gt 0 ]]; do
    case $1 in
        --unit-only)
            RUN_UNIT_ONLY=true
            shift
            ;;
        --integration-only)
            RUN_INTEGRATION_ONLY=true
            shift
            ;;
        --full)
            RUN_FULL=true
            shift
            ;;
        --no-test-full-build)
            NO_TEST_FULL_BUILD=true
            shift
            ;;
        --help)
            echo "Usage: $0 [OPTIONS]"
            echo "Options:"
            echo "  --unit-only          Run only unit tests (fast)"
            echo "  --integration-only   Run only integration tests (slow, requires RUN_INTEGRATION_TESTS=1)"
            echo "  --full               Run all tests including slow EMSDK integration tests"
            echo "  --no-test-full-build Exclude the Docker-based full build test (for faster integration testing)"
            echo "  --help              Show this help message"
            echo ""
            echo "By default, runs unit tests and full build test only."
            echo "Use --full to also run slow EMSDK integration tests (requires RUN_INTEGRATION_TESTS=1)."
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            echo "Use --help for usage information"
            exit 1
            ;;
    esac
done

# Set environment variables for consistent cross-platform path resolution
export ENV_FASTLED_SOURCE_PATH="/git/fastled/src"
export ENV_EMSDK_PATH="/emsdk"
export ENV_SKETCH_ROOT="/js/src"

# Use uv if available, otherwise fall back to pip
if command -v uv >/dev/null 2>&1; then
    # Install the package in development mode with uv
    uv pip install -e .
    
    if [[ "$RUN_INTEGRATION_ONLY" == "false" ]]; then
        echo "Running unit tests (fast)..."
        uv run pytest tests/unit -x -q --tb=short -n auto --durations=10
        echo ""
    fi
else
    echo "uv not found, falling back to standard Python tools"
    # Install the package in development mode
    pip install -e .
    
    if [[ "$RUN_INTEGRATION_ONLY" == "false" ]]; then
        echo "Running unit tests (fast)..."
        python -m pytest tests/unit -x -q --tb=short -n auto --durations=0
        echo ""
    fi
fi

# Run the full build test (important integration test) unless excluded
if [[ "$RUN_UNIT_ONLY" == "false" && "$NO_TEST_FULL_BUILD" == "false" ]]; then
    echo "Running full build test (Docker-based)..."
    uv run pytest tests/integration/test_full_build.py -v --durations=0 -s
elif [[ "$NO_TEST_FULL_BUILD" == "true" ]]; then
    echo "Skipping full build test (--no-test-full-build flag specified)"
fi

# Run slow EMSDK integration tests only with --full flag
if [[ "$RUN_FULL" == "true" ]]; then
    if [[ -z "$RUN_INTEGRATION_TESTS" ]]; then
        echo ""
        echo "Skipping EMSDK integration tests (set RUN_INTEGRATION_TESTS=1 to enable)"
        echo "EMSDK integration tests require downloading EMSDK binaries and are slow."
        echo "Run with: RUN_INTEGRATION_TESTS=1 $0 --full"
    else
        echo ""
        echo "Running EMSDK integration tests (slow, requires EMSDK binaries)..."
        uv run pytest tests/integration/test_emsdk_manager_integration.py tests/integration/test_native_compilation_integration.py -v --durations=0 -s
    fi
elif [[ "$RUN_INTEGRATION_ONLY" == "true" ]]; then
    # For --integration-only, run all integration tests including EMSDK ones
    if [[ -z "$RUN_INTEGRATION_TESTS" ]]; then
        echo ""
        echo "Running integration tests (excluding EMSDK tests - set RUN_INTEGRATION_TESTS=1 to enable all)..."
        uv run pytest tests/integration/test_full_build.py -v --durations=0 -s
    else
        echo ""
        echo "Running all integration tests including EMSDK tests..."
        uv run pytest tests/integration -v --durations=0 -s
    fi
else
    echo ""
    echo "Skipping slow EMSDK integration tests (use --full to enable)"
    echo "EMSDK integration tests require downloading EMSDK binaries and are slow."
fi