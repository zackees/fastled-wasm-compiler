#!/bin/bash

set -e

# if not activate present, install it
if ! command -v activate &> /dev/null; then
    echo "activate could not be found, installing it"
    bash install
fi

# Parse command line arguments
RUN_UNIT_ONLY=false
RUN_INTEGRATION_ONLY=false

while [[ $# -gt 0 ]]; do
    case $1 in
        --unit-only)
            RUN_UNIT_ONLY=true
            shift
            ;;
        --integration-only)
            RUN_INTEGRATION_ONLY=true
            shift
            ;;
        --help)
            echo "Usage: $0 [OPTIONS]"
            echo "Options:"
            echo "  --unit-only        Run only unit tests (fast)"
            echo "  --integration-only Run only integration tests (slow, requires RUN_INTEGRATION_TESTS=1)"
            echo "  --help            Show this help message"
            echo ""
            echo "By default, runs unit tests, full build test, and integration tests."
            echo "Integration tests require RUN_INTEGRATION_TESTS=1 environment variable."
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            echo "Use --help for usage information"
            exit 1
            ;;
    esac
done

# Set environment variables for consistent cross-platform path resolution
export ENV_FASTLED_SOURCE_PATH="git/fastled/src"
export ENV_EMSDK_PATH="emsdk"
# export ENV_SKETCH_PATH="/js/src"

# Use uv if available, otherwise fall back to pip
if command -v uv >/dev/null 2>&1; then
    # Install the package in development mode with uv
    uv pip install -e .
    
    if [[ "$RUN_INTEGRATION_ONLY" == "false" ]]; then
        echo "Running unit tests (fast)..."
        uv run pytest tests/unit -x -q --tb=short -n auto --durations=10
        echo ""
    fi
    
    if [[ "$RUN_UNIT_ONLY" == "false" ]]; then
        echo "Running integration tests (slow)..."
        uv run pytest tests/integration -x -q --tb=short --durations=10
        echo ""
    fi
else
    echo "uv not found, falling back to standard Python tools"
    # Install the package in development mode
    pip install -e .
    
    if [[ "$RUN_INTEGRATION_ONLY" == "false" ]]; then
        echo "Running unit tests (fast)..."
        python -m pytest tests/unit -x -q --tb=short -n auto --durations=0
        echo ""
    fi
    
    if [[ "$RUN_UNIT_ONLY" == "false" ]]; then
        echo "Running integration tests (slow)..."
        python -m pytest tests/integration -x -q --tb=short --durations=0
        echo ""
    fi
fi

# Always run the full build test (important integration test)
if [[ "$RUN_UNIT_ONLY" == "false" ]]; then
    echo "Running full build test (Docker-based)..."
    uv run pytest tests/integration/test_full_build.py -v --durations=0 -s
fi

# Run other integration tests (slow, require actual EMSDK installation)
if [[ "$RUN_UNIT_ONLY" == "false" ]]; then
    if [[ -z "$RUN_INTEGRATION_TESTS" ]]; then
        echo ""
        echo "Skipping EMSDK integration tests (set RUN_INTEGRATION_TESTS=1 to enable)"
        echo "EMSDK integration tests require downloading EMSDK binaries and are slow."
        echo "Run with: RUN_INTEGRATION_TESTS=1 $0"
    else
        echo ""
        echo "Running EMSDK integration tests (slow, requires EMSDK binaries)..."
        uv run pytest tests/integration/test_emsdk_manager_integration.py tests/integration/test_native_compilation_integration.py -v --durations=0 -s
    fi
fi