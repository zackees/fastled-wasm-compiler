name: Publish Emscripten Artifacts

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: ubuntu-latest
          - os: macos-13  # Intel Mac runner
            artifact_name: macos-x86_64
          - os: macos-latest  # ARM Mac runner (Apple Silicon)
            artifact_name: macos-arm64
          - os: windows-latest
            artifact_name: windows-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Emscripten Setup Script
        shell: bash
        run: |
          chmod +x install_emscripten.sh
          ./install_emscripten.sh

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: emsdk-${{ matrix.artifact_name }}
          path: ./emsdk-*.tar.gz
          if-no-files-found: error

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Prepare artifacts for deployment
        run: |
          mkdir -p emsdk
          
          # Process each artifact type
          declare -A artifact_mapping=(
            ["ubuntu-latest"]="ubuntu"
            ["macos-x86_64"]="macos-x86_64"
            ["macos-arm64"]="macos-arm64"
            ["windows-latest"]="windows"
          )
          
          for artifact_name in "${!artifact_mapping[@]}"; do
            friendly_name="${artifact_mapping[$artifact_name]}"
            
            echo "Processing $artifact_name -> $friendly_name"
            
            # Find the artifact directory for this type
            artifact_dir="./artifacts/emsdk-${artifact_name}"
            if [ -d "$artifact_dir" ]; then
              # Look for tar.gz files in the artifact directory
              found_file=$(find "$artifact_dir" -name "*.tar.gz" -type f | head -1)
              if [ -n "$found_file" ]; then
                echo "Found artifact: $found_file"
                cp "$found_file" "./emsdk/emsdk-${friendly_name}-latest.tar.gz"
                echo "Copied to: ./emsdk/emsdk-${friendly_name}-latest.tar.gz"
              else
                echo "No tar.gz file found in $artifact_dir"
              fi
            else
              echo "Artifact directory not found: $artifact_dir"
            fi
          done
          
          # Create legacy macos symlink pointing to macos-arm64 (default for newer systems)
          if [ -f "./emsdk/emsdk-macos-arm64-latest.tar.gz" ]; then
            ln -sf "emsdk-macos-arm64-latest.tar.gz" "./emsdk/emsdk-macos-latest.tar.gz"
            echo "Created legacy symlink: emsdk-macos-latest.tar.gz -> emsdk-macos-arm64-latest.tar.gz"
          fi
          
          echo "Final artifacts in emsdk directory:"
          ls -la ./emsdk/
          
          # Check file sizes to ensure they're under GitHub's 100MB limit
          for file in ./emsdk/*.tar.gz; do
            if [ -f "$file" ] && [ ! -L "$file" ]; then
              size=$(stat -f%z "$file" 2>/dev/null || stat -c%s "$file" 2>/dev/null || echo "0")
              size_mb=$((size / 1024 / 1024))
              echo "File size: $file = ${size_mb}MB"
              if [ $size_mb -gt 95 ]; then
                echo "WARNING: $file is ${size_mb}MB, approaching GitHub's 100MB limit!"
              fi
            fi
          done

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: emsdk
          clean: true
          single-commit: true
          commit-message: "Update Emscripten SDK artifacts"
          git-config-name: github-actions[bot]
          git-config-email: github-actions[bot]@users.noreply.github.com
